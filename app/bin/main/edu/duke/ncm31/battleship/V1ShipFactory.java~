package edu.duke.ncm31.battleship;

public class V1ShipFactory implements AbstractShipFactory<Character> {

  @Override
  public Ship<Character> makeSubmarine(Placement where) {
    // Create the submarine ship
    return createShip(where, 1, 2, 's', "Submarine");
  }

  @Override
  public Ship<Character> makeBattleship(Placement where) {
    // Create the Battleship
    return createShip(where, 1, 4, 'b', "Battleship");
  }

  @Override
  public Ship<Character> makeCarrier(Placement where) {
    // Create the carrier ship
    return createShip(where, 1, 6, 'c', "Carrier");
  }

  @Override
  public Ship<Character> makeDestoryer(Placement where) {
    // Create the destroyer ship
    return createShip(where, 1, 3, 'd', "Destroyer");
  }

  protected Ship<Character> createShip(Placement where, int w, int h, char letter, String name){
    if(where.getOrientation() == 'V'){
      RectangleShip<Character> new_ship = new RectangleShip<Character>(name, where.getWhere(), h, w, letter, '*');
      return new_ship;
    }
    else {
      RectangleShip<Character> new_ship = new RectangleShip<Character>(name, where.getWhere(), w, h, letter, '*');
      return new_ship;
    }
  }
  
}
